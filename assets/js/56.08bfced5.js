(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{476:function(t,a,e){"use strict";e.r(a);var v=e(15),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"一共以下几个过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一共以下几个过程"}},[t._v("#")]),t._v(" 一共以下几个过程")]),t._v(" "),e("ul",[e("li",[t._v("URL输入")]),t._v(" "),e("li",[t._v("DNS解析")]),t._v(" "),e("li",[t._v("TCP连接")]),t._v(" "),e("li",[t._v("发送HTTP请求")]),t._v(" "),e("li",[t._v("服务器处理请求")]),t._v(" "),e("li",[t._v("服务器响应请求")]),t._v(" "),e("li",[t._v("浏览器解析渲染页面")]),t._v(" "),e("li",[t._v("连接结束")])]),t._v(" "),e("h4",{attrs:{id:"dns解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dns解析"}},[t._v("#")]),t._v(" DNS解析")]),t._v(" "),e("blockquote",[e("p",[t._v("DNS:  DNS（Domain Name System，域名系统），因特网上作为域名和IP地址相互映射的一个分布式数据库")])]),t._v(" "),e("blockquote",[e("p",[t._v("查找顺序： 浏览器缓存--\x3e 操作系统缓存--\x3e 本地host文件 --\x3e 路由器缓存--\x3e ISP DNS缓存 --\x3e 顶级DNS服务器/根DNS服务器")])]),t._v(" "),e("h4",{attrs:{id:"建立tcp连接-三次握手以建立tcp连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#建立tcp连接-三次握手以建立tcp连接"}},[t._v("#")]),t._v(" 建立TCP连接 (三次握手以建立TCP连接)")]),t._v(" "),e("blockquote",[e("p",[t._v("为什需要三次握手？:  《计算机网络》第四版中讲“三次握手”的目的是“为了防止已失效的连接请求报文段突然又传送到了服务端，因而产生错误”")])]),t._v(" "),e("blockquote",[e("p",[t._v("这里要提醒一点，Chrome 在同一个域名下要求同时最多只能有 6 个 TCP 连接，超过 6 个的话剩下的请求就得等待。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://blog-9g8lgnuke4603ff9-1257988864.tcloudbaseapp.com/week10/2.jpg",alt:"avatar"}})]),t._v(" "),e("h4",{attrs:{id:"发送http请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发送http请求"}},[t._v("#")]),t._v(" 发送HTTP请求")]),t._v(" "),e("blockquote",[e("h4",{attrs:{id:"强缓存-expires-过期时间-废弃-cache-control-max-age-3600"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强缓存-expires-过期时间-废弃-cache-control-max-age-3600"}},[t._v("#")]),t._v(" 强缓存   "),e("code",[t._v("Expires: 过期时间 （废弃）")]),t._v(" "),e("code",[t._v("Cache-Control:max-age=3600")])]),t._v(" "),e("h4",{attrs:{id:"协商缓存-强缓存失效之后-浏览器在请求头中携带相应的缓存tag来向服务器发请求-由服务器根据这个tag-last-modified-和-etag-来决定是否使用缓存-这就是协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存-强缓存失效之后-浏览器在请求头中携带相应的缓存tag来向服务器发请求-由服务器根据这个tag-last-modified-和-etag-来决定是否使用缓存-这就是协商缓存"}},[t._v("#")]),t._v(" 协商缓存   强缓存失效之后，浏览器在请求头中携带相应的缓存tag来向服务器发请求，由服务器根据这个tag(Last-Modified 和 ETag)，来决定是否使用缓存，这就是协商缓存")])]),t._v(" "),e("ul",[e("li",[t._v("首先通过 Cache-Control 验证强缓存是否可用如果强缓存可用，直接使用")]),t._v(" "),e("li",[t._v("否则进入协商缓存，即发送 HTTP 请求，服务器通过请求头中的If-Modified-Since或者If-None-Match这些条件请求字段检查资源是否更新")]),t._v(" "),e("li",[t._v("若资源更新，返回资源和200状态码")]),t._v(" "),e("li",[t._v("否则，返回304，告诉浏览器直接从缓存获取资源")])]),t._v(" "),e("h4",{attrs:{id:"服务器处理请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务器处理请求"}},[t._v("#")]),t._v(" 服务器处理请求")]),t._v(" "),e("h5",{attrs:{id:"get-和-post的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-和-post的区别"}},[t._v("#")]),t._v(" get 和 post的区别")]),t._v(" "),e("blockquote",[e("p",[t._v("post请求也可以把参数写进url，get请求也可以把参数写进body。起始这两个本质没区别，更多是语义上的差别")])]),t._v(" "),e("blockquote",[e("p",[t._v("GET产生一个TCP数据包；POST产生两个TCP数据包。")])]),t._v(" "),e("h4",{attrs:{id:"服务器返回一个-http-响应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务器返回一个-http-响应"}},[t._v("#")]),t._v(" 服务器返回一个 HTTP 响应")]),t._v(" "),e("h4",{attrs:{id:"浏览器显示-html"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器显示-html"}},[t._v("#")]),t._v(" 浏览器显示 HTML")]),t._v(" "),e("blockquote",[e("p",[t._v("构建dom树 -> 构建render树 -> 布局render树 -> 绘制render树")])]),t._v(" "),e("ul",[e("li",[t._v("建立图层树(Layer Tree)")]),t._v(" "),e("li",[t._v("生成绘制列表")]),t._v(" "),e("li",[t._v("生成图块并栅格化")]),t._v(" "),e("li",[t._v("显示器显示内容")])]),t._v(" "),e("p",[t._v("显式合成:")]),t._v(" "),e("ul",[e("li",[t._v("HTML根元素本身就具有层叠上下文。")]),t._v(" "),e("li",[t._v("普通元素设置position不为static并且设置了z-index属性，会产生层叠上下文。")]),t._v(" "),e("li",[t._v("元素的 opacity 值不是 1")]),t._v(" "),e("li",[t._v("元素的 transform 值不是 none")]),t._v(" "),e("li",[t._v("元素的 filter 值不是 none")]),t._v(" "),e("li",[t._v("元素的 isolation 值是isolate\nwill-change指定的属性值为上面任意一个。(will-change的作用后面会详细介绍)")])]),t._v(" "),e("h4",{attrs:{id:"回流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回流"}},[t._v("#")]),t._v(" 回流")]),t._v(" "),e("blockquote",[e("p",[t._v("简单来说，就是当我们对 DOM 结构的修改引发 DOM 几何尺寸变化的时候，会发生回流的过程")])]),t._v(" "),e("h4",{attrs:{id:"重绘"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重绘"}},[t._v("#")]),t._v(" 重绘")]),t._v(" "),e("blockquote",[e("p",[t._v("当 DOM 的修改导致了样式的变化，并且没有影响几何属性的时候")])]),t._v(" "),e("h4",{attrs:{id:"合成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合成"}},[t._v("#")]),t._v(" 合成")]),t._v(" "),e("blockquote",[e("p",[t._v("还有一种情况，是直接合成。比如利用 CSS3 的transform、opacity、filter这些属性就可以实现合成的效果，也就是大家常说的GPU加速")])]),t._v(" "),e("h4",{attrs:{id:"连接结束-四次握手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接结束-四次握手"}},[t._v("#")]),t._v(" 连接结束(四次握手)")]),t._v(" "),e("h4",{attrs:{id:"传统rsa版本-https为什么让数据传输更安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#传统rsa版本-https为什么让数据传输更安全"}},[t._v("#")]),t._v(" (传统RSA版本)HTTPS为什么让数据传输更安全？")]),t._v(" "),e("blockquote",[e("p",[t._v("HTTPS并不是一个新的协议, 它在HTTP和TCP的传输中建立了一个安全层，利用对称加密和非对称机密结合数字证书认证的方式，让传输过程的安全性大大提高。")])])])}),[],!1,null,null,null);a.default=_.exports}}]);