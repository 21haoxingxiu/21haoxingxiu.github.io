(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{513:function(a,t,r){"use strict";r.r(t);var e=r(15),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h3",{attrs:{id:"流程概括"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#流程概括"}},[a._v("#")]),a._v(" 流程概括")]),a._v(" "),r("p",[a._v("Webpack 的运行流程是一个串行的过程，从启动到结束会依次执行以下流程：")]),a._v(" "),r("ul",[r("li",[r("h4",{attrs:{id:"初始化参数-从配置文件和-shell-语句中读取与合并参数-得出最终的参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#初始化参数-从配置文件和-shell-语句中读取与合并参数-得出最终的参数"}},[a._v("#")]),a._v(" 初始化参数：从配置文件和 Shell 语句中读取与合并参数，得出最终的参数；")])]),a._v(" "),r("li",[r("h4",{attrs:{id:"开始编译-用上一步得到的参数初始化-compiler-对象-加载所有配置的插件-执行对象的-run-方法开始执行编译"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开始编译-用上一步得到的参数初始化-compiler-对象-加载所有配置的插件-执行对象的-run-方法开始执行编译"}},[a._v("#")]),a._v(" 开始编译：用上一步得到的参数初始化 Compiler 对象，加载所有配置的插件，执行对象的 run 方法开始执行编译；")])]),a._v(" "),r("li",[r("h4",{attrs:{id:"确定入口-根据配置中的-entry-找出所有的入口文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#确定入口-根据配置中的-entry-找出所有的入口文件"}},[a._v("#")]),a._v(" 确定入口：根据配置中的 entry 找出所有的入口文件；")])]),a._v(" "),r("li",[r("h4",{attrs:{id:"编译模块-从入口文件出发-调用所有配置的-loader-对模块进行翻译-再找出该模块依赖的模块-再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#编译模块-从入口文件出发-调用所有配置的-loader-对模块进行翻译-再找出该模块依赖的模块-再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理"}},[a._v("#")]),a._v(" 编译模块：从入口文件出发，调用所有配置的 Loader 对模块进行翻译，再找出该模块依赖的模块，再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理；")])]),a._v(" "),r("li",[r("h4",{attrs:{id:"完成模块编译-在经过第4步使用-loader-翻译完所有模块后-得到了每个模块被翻译后的最终内容以及它们之间的依赖关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#完成模块编译-在经过第4步使用-loader-翻译完所有模块后-得到了每个模块被翻译后的最终内容以及它们之间的依赖关系"}},[a._v("#")]),a._v(" 完成模块编译：在经过第4步使用 Loader 翻译完所有模块后，得到了每个模块被翻译后的最终内容以及它们之间的依赖关系；")])]),a._v(" "),r("li",[r("h4",{attrs:{id:"输出资源-根据入口和模块之间的依赖关系-组装成一个个包含多个模块的-chunk-再把每个-chunk-转换成一个单独的文件加入到输出列表-这步是可以修改输出内容的最后机会"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#输出资源-根据入口和模块之间的依赖关系-组装成一个个包含多个模块的-chunk-再把每个-chunk-转换成一个单独的文件加入到输出列表-这步是可以修改输出内容的最后机会"}},[a._v("#")]),a._v(" 输出资源：根据入口和模块之间的依赖关系，组装成一个个包含多个模块的 Chunk，再把每个 Chunk 转换成一个单独的文件加入到输出列表，这步是可以修改输出内容的最后机会；")])]),a._v(" "),r("li",[r("h4",{attrs:{id:"输出完成-在确定好输出内容后-根据配置确定输出的路径和文件名-把文件内容写入到文件系统。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#输出完成-在确定好输出内容后-根据配置确定输出的路径和文件名-把文件内容写入到文件系统。"}},[a._v("#")]),a._v(" 输出完成：在确定好输出内容后，根据配置确定输出的路径和文件名，把文件内容写入到文件系统。")])])]),a._v(" "),r("p",[a._v("在以上过程中，Webpack 会在特定的时间点广播出特定的事件，插件在监听到感兴趣的事件后会执行特定的逻辑，并且插件可以调用 Webpack 提供的 API 改变 Webpack 的运行结果")])])}),[],!1,null,null,null);t.default=s.exports}}]);